generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Products {
  id       String @id @default(cuid())
  price    Int
  category String
}

model ProductosEmbeddings {
  id       String @id @default(ulid())
  product  String
  category String
  price    String
  size     String
}

model ChatMessage {
  id        String   @id @default(uuid())
  userId    String
  role      String
  content   String
  createdAt DateTime @default(now())

  @@index([userId, createdAt])
}

model langchain_chat_histories {
  id         Int    @id @default(autoincrement())
  session_id String @db.VarChar(255)
  message    Json
}

model Interview {
  id            String   @id @default(cuid())
  candidateName String
  position      String
  score         Int
  createdAt     DateTime @default(now())
  updateAt      DateTime @updatedAt

  @@index([candidateName])
  @@index([position])
}

model ProductIndex {
  id          String   @id @default(uuid()) @db.Uuid
  name        String
  description String
  price       Float
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Users {
  id       String @id
  username String @unique
  password String
}

model mitabladeprueba {
  id        Int       @id @default(autoincrement())
  nombre    String    @db.VarChar(100)
  correo    String    @unique @db.VarChar(100)
  edad      Int?
  creado_en DateTime? @default(now()) @db.Timestamp(6)
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  imageUrl    String
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int
  createdAt   DateTime @default(now())
}

model CategoryChatBot {
  id       String           @id @default(uuid())
  name     String           @unique
  products ProductChatBot[]
}

model ProductChatBot {
  id          String          @id @default(uuid())
  name        String          @unique
  description String
  price       Decimal         @db.Decimal(10, 2)
  imageUrl    String
  stock       Int
  categoryId  String
  category    CategoryChatBot @relation(fields: [categoryId], references: [id])
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}
